{"version":3,"sources":["starbg.js"],"names":["width","height","pointerX","pointerY","STAR_COLOR","STAR_SIZE","STAR_MIN_SCALE","window","innerWidth","innerHeight","STAR_COUNT","document","getElementById","canvas","scale","velocity","x","y","tx","ty","z","touchInput","infoElement","generate","resize","onresize","i","stars","Math","random","recycleStar","star","direction","vx","abs","axis","vy","OVERFLOW_THRESHOLD","devicePixelRatio","forEach","step","requestAnimationFrame","context","clearRect","update","render","beginPath","lineCap","globalAlpha","strokeStyle","moveTo","tailX","tailY","movePointer","onMouseMove","clientX","lineWidth","onTouchMove","event","preventDefault","lineTo","stroke","ox","oy","clientY","touches","onMouseLeave","addEventListener","ontouchend","onmouseleave"],"mappings":"AAEA,IAYIA,MAAOC,OAMOC,SAAGC,SAlBrBC,WAAA,OACAC,UAAA,EACMD,eAAmB,GACnBC,mBAAa,GACbC,YAAcC,OAAMC,WAAAD,OAAAE,aAAA,GAEpBC,OAAUC,SAAUC,eAAcL,QAAOE,EAEzCI,QAASF,OAASC,WAAAA,IAAe,EAGnCE,MAAQ,EAKRZ,MAAQ,GAEmBa,SAAG,CAAAC,EAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,EAAA,IAAA,EAAUC,WAAE,CAAA,EAWxCC,aATNC,SAAIF,EAEJE,OAAAA,EACAC,KAAAA,EAGAjB,OAAOkB,SAAWD,OAGEb,SAASC,eAAe,SAAU,GAatD,SAGSW,WAFP,IAGK,IAAGG,EAAA,EAAAA,EAAAhB,WAAAgB,CAAA,GAFNC,MAGKrB,KAAAA,CACHU,EAAA,EACJC,EAAA,EACFG,EAAAd,eAAAsB,KAAAC,OAAA,GAAA,EAAAvB,eAEA,CAAA,CAFA,CAOA,SAASwB,UAAAA,GACPC,EAAIC,EAAAA,KAASH,OAAM,EAAA7B,MAEnB+B,EAAIE,EAAKL,KAAKM,OAAInB,EAAAA,MALpB,CAEA,SAOQoB,YAAIJ,GANV,IAQEC,EAAa,IAEZC,EAAML,KAAAM,IAAAnB,SAAAC,CAAA,EAPPoB,EAQED,KAAOP,IAAKC,SAAQZ,CAAA,GAGlBkB,EAAJF,GAAgB,EAARG,KAYRL,EADa,OARXC,EAAAA,EACFJ,KAAAC,OAAA,EAAAI,GAAAA,EAAAG,GAAA,IAAA,IAGO9B,KAAAA,OAAc,EAAGsB,GAAKC,EAAOO,GAAM,IAAG9B,KAKpBL,EAAX4B,SAAQb,EAAS,IAAA,IAErBqB,EAAAA,SAAAA,EAAkB,IAAA,KAP9BN,EAWEA,EAAMzB,eAAiBuB,KAAMA,OAAE,GAAA,EAAAvB,gBAEjB,MAAdyB,GACAA,EAAKd,EAAI,GACVc,EAAMf,EAAIgB,KAAAA,OAAS,EAAKhC,MACvB+B,EAAKf,EAAIhB,KAAK6B,OAAO,EAACA,QACJQ,MAATpC,GACX8B,EAAAf,EAAA,CAAAqB,mBACFN,EAAAd,EAAAhB,OAAA2B,KAAAC,OAAA,GAEkB,MAATL,GACPV,EAAKE,EAAGT,MAAO+B,mBAEftC,EAAKiB,EAAGV,OAAOC,KAAUqB,OAAGf,GACZL,MAAPF,GAETM,EAAOb,EAAAA,MAAQA,KAAK6B,OAAA,EACpBhB,EAAOZ,EAAAA,CAAAA,oBAEiB,MAAlBsC,IACRR,EAAAf,EAAAhB,MAAA4B,KAAAC,OAAA,EAEAE,EAASS,EAAIA,OAAGH,mBAdhB,CAEA,SAkBEI,SACF3B,MAAAP,OAAA+B,kBAAA,EAGEvB,MAAQR,OAAOC,WAAIM,MACnBC,OAASI,OAAMV,YAAIK,MAGnBC,OAAAA,MAAeA,MAEfY,OAAMY,OAAQtC,OAnBd0B,MAqBMY,QAAMxB,SAAU,CApBxB,CAEA,SAsBSK,OArBPsB,QAAQC,UAAU,EAAG,EAAG3C,MAAOC,MAAM,EAErC2C,OAuBIb,EAtBJc,OA2BIf,EAEJW,sBAAED,IAAA,CACJ,CAzBA,SA4BQD,SA3BNxB,SA4BSG,IAAC4B,IA3BV/B,SA4BSI,IAAC4B,IA1BVhC,SA4BSC,GAAgCa,IAA/BmB,SAAc9B,GAAGH,SAASa,GA3BpCb,SA4BSE,GAAyB,IAAxBgC,SAAc7C,GAAAA,SAAUa,GA1BlCU,MA6BEe,QAAQQ,SAAAA,GAERnB,EAAIoB,GAAKpC,SAAGA,EAAUgB,EAAIX,EA7B1BW,EA8BEqB,GAAQrC,SAASE,EAAIc,EAACX,EAExBW,EAAAf,IAAAe,EAAAf,EAAAhB,MAAA,GAAAe,SAAAK,EAAAW,EAAAX,EACAW,EAAIH,IAAKM,EAAIiB,EAAMlD,OAAQkD,GAAKpC,SAAMK,EAAAW,EAAAX,EACtCW,EAAIH,GAAKM,SAAUd,GAMvBW,EAAAf,EAAA,CAAAqB,oBAEAN,EAASsB,EAAAA,MAAahB,oBAChBN,EAAAd,EAAOf,CAAAA,oBACT6B,EAAMd,EAAIhB,OAAGC,qBAGba,YAAcA,CAAAA,CAEhB,CAAA,CAjCF,CAqCA,SAAA8B,SAEAlB,MAAAY,QAASe,SAAAA,GACPjC,QAAUyB,UAAQ,EAElBO,QAAAA,QAAkBE,QACpBb,QAAAc,UAAAnD,UAAA0B,EAAAX,EAAAN,MAEA4B,QAASe,YAAiB,GAAE,GAAA7B,KAAAC,OAAA,EAC1BR,QAAU4B,YAAO7C,WAIjBsD,QAAMC,UAAc,EACtBjB,QAAAQ,OAAAnB,EAAAf,EAAAe,EAAAd,CAAA,EAGEf,IAAAA,EAAe,EAAJa,SAAIC,EACfb,EAAe,EAAJY,SAAIE,EAtCTW,KAAKM,IAAIiB,CAAK,EAAI,KAAKA,EAAQ,IAC/BvB,KAAKM,IAAIkB,CAAK,EAAI,KAAKA,EAAQ,IAEnCV,QAAQkB,OAAO7B,EAAKf,EAAImC,EAAOpB,EAAKd,EAAImC,CAAK,EAE7CV,QAAQmB,OAAO,CACjB,CAAC,CACH,CAEA,SAASR,YAAYrC,EAAGC,GACtB,IACM6C,EACFC,EAFoB,UAApB,OAAO7D,UAA6C,UAApB,OAAOC,WACrC2D,EAAK9C,EAAId,SACX6D,EAAK9C,EAAId,SAEXY,SAASG,GAAKH,SAASG,GAAM4C,EAAK,EAAKhD,OAASO,WAAa,EAAI,CAAC,GAClEN,SAASI,GAAKJ,SAASI,GAAM4C,EAAK,EAAKjD,OAASO,WAAa,EAAI,CAAC,IAGpEnB,SAAWc,EACXb,SAAWc,CACb,CAEA,SAASqC,YAAYI,GACnBrC,WAAa,CAAA,EAEbgC,YAAYK,EAAMH,QAASG,EAAMM,OAAO,CAC1C,CAEA,SAASP,YAAYC,GACnBrC,WAAa,CAAA,EAEbgC,YAAYK,EAAMO,QAAQ,GAAGV,QAASG,EAAMO,QAAQ,GAAGD,QAAS,CAAA,CAAI,EAEpEN,EAAMC,eAAe,CACvB,CAEA,SAASO,eAEP/D,SADAD,SAAW,IAEb,CA1KIoB,cACFA,YAAY6C,iBAAiB,YAAab,WAAW,EACrDhC,YAAY6C,iBAAiB,YAAaV,WAAW,GAIvD5C,OAAOuD,YAAaF,YAEpBvD,OAAAA,WAAS0D,aAAT1D,SAGO0D,aAAe3D","file":"starbg.js","sourcesContent":["/*          *     .        *  .    *    *   .\r\n .  *  move your mouse to over the stars   .\r\n *  .  .   change these values:   .  *\r\n   .      * .        .          * .       */\r\nconst STAR_COLOR = \"#fff\";\r\nconst STAR_SIZE = 3;\r\nconst STAR_MIN_SCALE = 0.2;\r\nconst OVERFLOW_THRESHOLD = 50;\r\nconst STAR_COUNT = (window.innerWidth + window.innerHeight) / 18;\r\n\r\nconst canvas = document.getElementById(\"starbg\");\r\nconst context = canvas.getContext(\"2d\");\r\n\r\nlet scale = 1; // device pixel ratio\r\nlet width, height;\r\n\r\nlet stars = [];\r\n\r\nlet pointerX, pointerY;\r\n\r\nlet velocity = { x: 0, y: 0, tx: 0, ty: 0, z: 0.00000001 };\r\n\r\nlet touchInput = false;\r\n\r\ngenerate();\r\nresize();\r\nstep();\r\n\r\nwindow.onresize = resize;\r\n\r\n// Получаем элемент, который перекрывает canvas\r\nconst infoElement = document.getElementById(\"content\");\r\n\r\n// Если infoElement существует, то работаем.\r\nif (infoElement) {\r\n  infoElement.addEventListener(\"mousemove\", onMouseMove);\r\n  infoElement.addEventListener(\"touchmove\", onTouchMove);\r\n}\r\n\r\ncanvas.ontouchmove = onTouchMove;\r\ncanvas.ontouchend = onMouseLeave;\r\n\r\ndocument.onmouseleave = onMouseLeave;\r\n\r\nfunction generate() {\r\n  for (let i = 0; i < STAR_COUNT; i++) {\r\n    stars.push({\r\n      x: 0,\r\n      y: 0,\r\n      z: STAR_MIN_SCALE + Math.random() * (1 - STAR_MIN_SCALE),\r\n    });\r\n  }\r\n}\r\n\r\nfunction placeStar(star) {\r\n  star.x = Math.random() * width;\r\n  star.y = Math.random() * height;\r\n}\r\n\r\nfunction recycleStar(star) {\r\n  let direction = \"z\";\r\n\r\n  let vx = Math.abs(velocity.x),\r\n    vy = Math.abs(velocity.y);\r\n\r\n  if (vx > 1 || vy > 1) {\r\n    let axis;\r\n\r\n    if (vx > vy) {\r\n      axis = Math.random() < vx / (vx + vy) ? \"h\" : \"v\";\r\n    } else {\r\n      axis = Math.random() < vy / (vx + vy) ? \"v\" : \"h\";\r\n    }\r\n\r\n    if (axis === \"h\") {\r\n      direction = velocity.x > 0 ? \"l\" : \"r\";\r\n    } else {\r\n      direction = velocity.y > 0 ? \"t\" : \"b\";\r\n    }\r\n  }\r\n\r\n  star.z = STAR_MIN_SCALE + Math.random() * (1 - STAR_MIN_SCALE);\r\n\r\n  if (direction === \"z\") {\r\n    star.z = 0.1;\r\n    star.x = Math.random() * width;\r\n    star.y = Math.random() * height;\r\n  } else if (direction === \"l\") {\r\n    star.x = -OVERFLOW_THRESHOLD;\r\n    star.y = height * Math.random();\r\n  } else if (direction === \"r\") {\r\n    star.x = width + OVERFLOW_THRESHOLD;\r\n    star.y = height * Math.random();\r\n  } else if (direction === \"t\") {\r\n    star.x = width * Math.random();\r\n    star.y = -OVERFLOW_THRESHOLD;\r\n  } else if (direction === \"b\") {\r\n    star.x = width * Math.random();\r\n    star.y = height + OVERFLOW_THRESHOLD;\r\n  }\r\n}\r\n\r\nfunction resize() {\r\n  scale = window.devicePixelRatio || 1;\r\n\r\n  width = window.innerWidth * scale;\r\n  height = window.innerHeight * scale;\r\n\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n\r\n  stars.forEach(placeStar);\r\n}\r\n\r\nfunction step() {\r\n  context.clearRect(0, 0, width, height);\r\n\r\n  update();\r\n  render();\r\n\r\n  requestAnimationFrame(step);\r\n}\r\n\r\nfunction update() {\r\n  velocity.tx *= 0.96;\r\n  velocity.ty *= 0.96;\r\n\r\n  velocity.x += (velocity.tx - velocity.x) * 0.8;\r\n  velocity.y += (velocity.ty - velocity.y) * 0.8;\r\n\r\n  stars.forEach((star) => {\r\n    star.x += velocity.x * star.z;\r\n    star.y += velocity.y * star.z;\r\n\r\n    star.x += (star.x - width / 2) * velocity.z * star.z;\r\n    star.y += (star.y - height / 2) * velocity.z * star.z;\r\n    star.z += velocity.z;\r\n\r\n    // recycle when out of bounds\r\n    if (\r\n      star.x < -OVERFLOW_THRESHOLD ||\r\n      star.x > width + OVERFLOW_THRESHOLD ||\r\n      star.y < -OVERFLOW_THRESHOLD ||\r\n      star.y > height + OVERFLOW_THRESHOLD\r\n    ) {\r\n      recycleStar(star);\r\n    }\r\n  });\r\n}\r\n\r\nfunction render() {\r\n  stars.forEach((star) => {\r\n    context.beginPath();\r\n    context.lineCap = \"round\";\r\n    context.lineWidth = STAR_SIZE * star.z * scale;\r\n    context.globalAlpha = 0.5 + 0.5 * Math.random();\r\n    context.strokeStyle = STAR_COLOR;\r\n\r\n    context.beginPath();\r\n    context.moveTo(star.x, star.y);\r\n\r\n    var tailX = velocity.x * 2,\r\n      tailY = velocity.y * 2;\r\n\r\n    // stroke() wont work on an invisible line\r\n    if (Math.abs(tailX) < 0.1) tailX = 0.5;\r\n    if (Math.abs(tailY) < 0.1) tailY = 0.5;\r\n\r\n    context.lineTo(star.x + tailX, star.y + tailY);\r\n\r\n    context.stroke();\r\n  });\r\n}\r\n\r\nfunction movePointer(x, y) {\r\n  if (typeof pointerX === \"number\" && typeof pointerY === \"number\") {\r\n    let ox = x - pointerX,\r\n      oy = y - pointerY;\r\n\r\n    velocity.tx = velocity.tx + (ox / 8) * scale * (touchInput ? 1 : -1);\r\n    velocity.ty = velocity.ty + (oy / 8) * scale * (touchInput ? 1 : -1);\r\n  }\r\n\r\n  pointerX = x;\r\n  pointerY = y;\r\n}\r\n\r\nfunction onMouseMove(event) {\r\n  touchInput = false;\r\n\r\n  movePointer(event.clientX, event.clientY);\r\n}\r\n\r\nfunction onTouchMove(event) {\r\n  touchInput = true;\r\n\r\n  movePointer(event.touches[0].clientX, event.touches[0].clientY, true);\r\n\r\n  event.preventDefault();\r\n}\r\n\r\nfunction onMouseLeave() {\r\n  pointerX = null;\r\n  pointerY = null;\r\n}\r\n"]}